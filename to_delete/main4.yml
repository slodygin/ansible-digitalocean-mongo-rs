---
- hosts: test-droplet
  name: Test Connection and Determine Remote User
  gather_facts: false
  roles:
    - { role: connection, tags: [connection, always] }
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - local_python_interpreter: "{{ ansible_playbook_python }}"
    - ansible_ssh_user: root

- hosts: test-droplet
  gather_facts: no
  become: no
  roles:
    - { role: python-raw }

- hosts: test-droplet
  become: no
  gather_facts: true
  tasks:
    - name: Get local machine's IP address
      set_fact:
        local_machine_ip: "{{ ansible_env['SSH_CLIENT'].split() | first }}"
      changed_when: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3

- hosts: test-droplet
  become: no
  gather_facts: true
  roles:
    - { role: swapfile, tags: [swapfile] }
    - { role: fail2ban, tags: [fail2ban] }
    - { role: ntp, tags: [ntp] }
    - { role: unattended-upgrades, tags: [unattended-upgrades] }
    - { role: sshd, tags: [sshd] }
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - fail2ban_ip_whitelist: "{{ local_machine_ip }}/8"

- hosts: test-droplet
  become: no
  gather_facts: true
  roles:
    - mongodb
  vars:
    - mongodb_replication_replset: rp0                  # Enable replication <setname>[/<optionalseedhostlist>]
    - mongodb_replication_replindexprefetch: "all"      # specify index prefetching behavior (if secondary) [none|_id_only|all]
    - mongodb_replication_oplogsize: 1024               # specifies a maximum size in megabytes for the replication operation log
    - mongodb_package: mongodb-org
    - mongodb_version: "3.6"
    - mongodb_security_authorization: "enabled"
    - mongodb_set_parameters: { "enableLocalhostAuthBypass": "true", "authenticationMechanisms": "SCRAM-SHA-1,MONGODB-CR" }
    - mongodb_user_admin_name: siteUserAdmin
    - mongodb_user_admin_password: passw0rd
    - mongodb_root_admin_name: siteRootAdmin
    - mongodb_root_admin_password: passw0rd
    - mongodb_net_bindip: 0.0.0.0
    - mongodb_login_host: test-droplet

- hosts: test-droplet
  become: yes
  vars_prompt:
    - name: install_lemp
      prompt: Do you want to install the LEMP stack (y/n)?
      private: no
    - name: install_docker
      prompt: Do you want to install Docker (y/n)?
      private: no
  tasks:
    - include: tasks/lemp.yml
      when: install_lemp == 'y'
    - include: tasks/docker.yml
      when: install_docker == 'y'
    - name: Upgrade all packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400
  vars:
    - ansible_ssh_user: "{{ (users|first).username }}"
    - ansible_become_pass: "{{ user_acct_password }}"
